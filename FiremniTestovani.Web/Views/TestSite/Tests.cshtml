@model FiremniTestovani.Web.Models.General.TimeSlotsViewModel
@{ ViewData["Title"] = "Přehled rezervací"; }

@section header{
    <!-- Tempusdominus Bootstrap 4 -->
    <link rel="stylesheet" href="~/lib/tempusdominus-bootstrap-4/css/tempusdominus-bootstrap-4.min.css">
    <!-- DataTables -->
    <link rel="stylesheet" href="~/lib/datatables-bs4/css/dataTables.bootstrap4.css">
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <h1 class="m-0 text-dark"> Přehled rezervací</h1>
                </div><!-- /.col -->
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="TestSite">Testovací místo</a></li>
                        <li class="breadcrumb-item active">Přehled rezervací</li>
                    </ol>
                </div><!-- /.col -->
            </div><!-- /.row -->
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content-header -->
    <!-- Main content -->
    <div class="content">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-5">
                    <div class="row justify-content-center">
                        <div class="col-md-12" id="fr-bookings">
                            <div class="card">
                                <div class="card-header">
                                    <h3 class="card-title">Rezervace na den</h3>
                                </div>
                                <div class="card-body">
                                    <table class="table table-hover table-sm w-100" id="fr-slots-table">
                                        <thead>
                                            <tr>
                                                <th>Čas</th>
                                                <th>Os. č.</th>
                                                <th>Jméno</th>
                                                <th>Příjmení</th>
                                                <th>Telefon</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-7">
                    <div class="row justify-content-center">
                        <div class="col-md-12" id="fr-bookings">
                            <div class="card">
                                <div class="card-header">
                                    <h3 class="card-title">Testy čekající na výsledek</h3>
                                </div>
                                <div class="card-body">
                                    <table class="table table-hover table-sm" id="fr-waiting-table">
                                        <thead>
                                            <tr>
                                                <th>Čas</th>
                                                <th>Zbývá</th>
                                                <th>Os. č.</th>
                                                <th>Jméno</th>
                                                <th>Příjmení</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="row justify-content-center">
                        <div class="col-md-12" id="fr-bookings">
                            <div class="card">
                                <div class="card-header">
                                    <h3 class="card-title">Provedené testy</h3>
                                </div>
                                <div class="card-body">
                                    <table class="table table-hover table-sm w-100" id="fr-completed-table">
                                        <thead>
                                            <tr>
                                                <th>Čas</th>
                                                <th>Os. č.</th>
                                                <th>Jméno</th>
                                                <th>Příjmení</th>
                                                <th>Telefon</th>
                                                <th>Pojišťovna</th>
                                                <th>Výsledek</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div><!-- /.container-fluid -->
    </div>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->

<div class="modal fade" id="modal-lg">
    @*<partial name="_GenerateSlotsModalPartial" model="new FiremniTestovani.Web.Models.Admin.GenerateSlotsViewModel()" />*@
</div>
<!-- /.modal -->

@section scripts{
    <partial name="_ValidationScriptsPartial" />

    <!-- Moment.js -->
    <script src="~/lib/moment/moment-with-locales.min.js"></script>
    <!-- Tempusdominus Bootstrap 4 -->
    @*<script src="~/lib/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.min.js"></script>*@
    <script src="~/lib/tempusdominus-bootstrap-4/js/tempusdominus-bootstrap-4.js"></script>
    <!-- DataTables  & Plugins -->
    <script src="~/lib/datatables/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
    <script src="~/lib/datatables-responsive/js/dataTables.responsive.min.js"></script>
    <script src="~/lib/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
    <script src="~/lib/datatables-buttons/js/dataTables.buttons.min.js"></script>
    <script src="~/lib/datatables-buttons/js/buttons.bootstrap4.min.js"></script>
    <script src="~/lib/jszip/jszip.min.js"></script>
    <script src="~/lib/pdfmake/pdfmake.min.js"></script>
    <script src="~/lib/pdfmake/vfs_fonts.js"></script>
    <script src="~/lib/datatables-buttons/js/buttons.html5.min.js"></script>
    <script src="~/lib/datatables-buttons/js/buttons.print.min.js"></script>
    <script src="~/lib/datatables-buttons/js/buttons.colVis.min.js"></script>

    <script>
        moment.locale('cs');
    </script>

    <script>
        // xhr array
        var xhrArray1 = [];
        // variable for active dates
        var activeDates = [];
        var freeDates = [];

        // ------------------------------
        //
        // ------------------------------
        var table1 = $('#fr-slots-table').DataTable({
            stateSave: true,
            ajax: {
                type: 'POST',
                url: '@Url.Action("_TestsPartial", "TestSite", null)'
            },
            columns: [
                {
                    render: function (data, type, full, meta) {
                        return new moment(full.FromExpected).format('HH:mm');
                    },
                    className: 'text-sm',
                },
                {
                    data: 'EmployeeID',
                    autoWidth: true,
                    className: 'text-sm',
                },
                {
                    data: 'FirstName',
                    autoWidth: true,
                    className: 'text-sm',
                },
                {
                    data: 'LastName',
                    autoWidth: true,
                    className: 'text-sm',
                },
                {
                    data: 'Phone',
                    autoWidth: true,
                    className: 'text-sm',
                },
                //{
                //    render: function (data, type, full, meta) {
                //        var additionalData = JSON.parse(full.SysAdditionalData);
                //        return additionalData.insurance;
                //        //return new moment(full.FromExpected).format('HH:mm');
                //    }
                //},
                {
                    sortable: false,
                    className: 'text-right',
                    render: function (data, type, full, meta) {
                        return '<button type="button" class="btn btn-success btn-sm mr-1 fr-arrival-submit" data-id="' + full.TimeSlotBookingID + '">Příchod</button>' +
                            '<button type="button" class="btn btn-default btn-sm fr-test-absence-submit" data-id="' + full.TimeSlotBookingID + '">Zrušit</button>';
                    }
                }
            ],
            language: dataTableCzech
        });

        // ------------------------------
        //
        // ------------------------------
        var table2 = $('#fr-waiting-table').DataTable({
            stateSave: true,
            ajax: {
                type: 'POST',
                url: '@Url.Action("_TestsWaitingPartial", "TestSite", null)'
            },
            columns: [
                {
                    render: function (data, type, full, meta) {
                        return new moment(full.FromActual).format('HH:mm');
                    },
                    className: 'text-sm',
                    autoWidth: true
                },
                {
                    render: function (data, type, full, meta) {
                        var remaining = new moment(full.FromActual)
                            .add(20, 'minutes')
                            .format();

                        return '<span class="fr-remaining-time" data-id="' + full.TimeSlotBookingID + '" data-target-time="' + remaining + '"></span>';
                    },
                    className: 'text-sm',
                    autoWidth: true
                },
                {
                    className: 'text-sm',
                    data: 'EmployeeID',
                    autoWidth: true
                },
                {
                    className: 'text-sm',
                    data: 'FirstName',
                    autoWidth: true
                },
                {
                    className: 'text-sm',
                    data: 'LastName',
                    autoWidth: true
                },
                {
                    sortable: false,
                    className: 'text-right text-nowrap',
                    render: function (data, type, full, meta) {
                        return '<button type="button" class="btn btn-success btn-sm mr-1 fr-test-result-submit" data-result="false" data-id="' + full.TimeSlotBookingID + '">Negativní</button>' +
                            '<button type="button" class="btn btn-danger btn-sm mr-1 fr-test-result-submit" data-result="true" data-id="' + full.TimeSlotBookingID + '">Pozitivní</button>' +
                            '<button type="button" class="btn btn-default btn-sm fr-test-absence-submit" data-id="' + full.TimeSlotBookingID + '">Zrušit</button>';
                    },
                    autoWidth: true
                }
            ],
            language: dataTableCzech
        });

        // ------------------------------
        //
        // ------------------------------
        var table3 = $('#fr-completed-table').DataTable({
            stateSave: true,
            ajax: {
                type: 'POST',
                url: '@Url.Action("_TestsCompletedPartial", "TestSite", null)'
            },
            columns: [
                {
                    render: function (data, type, full, meta) {
                        return new moment(full.FromActual).format('HH:mm');
                    }
                },
                {
                    data: 'EmployeeID',
                    autoWidth: true
                },
                {
                    data: 'FirstName',
                    autoWidth: true
                },
                {
                    data: 'LastName',
                    autoWidth: true
                },
                {
                    data: 'Phone',
                    autoWidth: true
                },
                {
                    render: function (data, type, full, meta) {
                        var additionalData = JSON.parse(full.SysAdditionalData);
                        return additionalData.insurance;
                        //return new moment(full.FromExpected).format('HH:mm');
                    }
                },
                {
                    render: function (data, type, full, meta) {
                        if (full.TestResult) {
                            return '<span class="badge badge-danger">POZITIVNÍ<span>';
                        }
                        else {
                            return '<span class="badge badge-success">NEGATIVNÍ<span>';
                        }
                        //return new moment(full.FromExpected).format('HH:mm');
                    },
                    autoWidth: true
                },
                //{
                //    sortable: false,
                //    className: 'text-right',
                //    render: function (data, type, full, meta) {
                //        return '<button type="button" class="btn btn-success btn-sm mr-1 fr-test-result-submit" data-result="false" data-id="' + full.TimeSlotBookingID + '">Negativní</button>' +
                //            '<button type="button" class="btn btn-danger btn-sm mr-1 fr-test-result-submit" data-result="true" data-id="' + full.TimeSlotBookingID + '">Pozitivní</button>' +
                //            '<button type="button" class="btn btn-default btn-sm fr-test-absence-submit" data-id="' + full.TimeSlotBookingID + '">Zrušit</button>';
                //    },
                //    autoWidth: true
                //}
            ],
            language: dataTableCzech
        });

        // ------------------------------
        //
        // ------------------------------
        function reloadTable(table) {
            table.clear();
            table.ajax.reload();
            table.draw();
        }

        // ------------------------------
        //
        // ------------------------------
        $(document).on('click', '.fr-arrival-submit', function (event) {
            var $button = $(this);

            var bookingID = $button.data('id');

            var data = {
                bookingID: bookingID
            };

            Swal.fire({
                icon: 'question',
                title: 'Opravdu chcete zaznamenat příchod?',
                //html: 'Označit výsledek testu',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Příchod',
                cancelButtonText: 'Zrušit',
                reverseButtons: false
            }).then((result) => {
                if (result.isConfirmed) {
                    submitArrival(data);
                }
            });
        });

        // ------------------------------
        //
        // ------------------------------
        $(document).on('click', '.fr-test-result-submit', function (event) {
            var $button = $(this);

            var testResult = $button.data('result');
            var bookingID = $button.data('id');

            var stringResult = testResult ? 'pozitivní' : 'negativní';
            var stringColor = testResult ? 'error' : 'success';

            var data = {
                bookingID: bookingID,
                testResult: testResult
            };

            Swal.fire({
                icon: stringColor,
                title: 'Opravdu chcete označit výsledek testu jako ' + stringResult + '?',
                //html: 'Označit výsledek testu',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Odeslat výsledek',
                cancelButtonText: 'Zrušit',
                reverseButtons: false
            }).then((result) => {
                if (result.isConfirmed) {
                    submitResult(data);
                }
                //} else if (
                //    /* Read more about handling dismissals below */
                //    result.dismiss === Swal.DismissReason.cancel
                //) {
                //    swalWithBootstrapButtons.fire(
                //        'Cancelled',
                //        'Your imaginary file is safe :)',
                //        'error'
                //    )
                //}
            });
        });

        // ------------------------------
        //
        // ------------------------------
        $(document).on('click', '.fr-test-absence-submit', function (event) {
            var $button = $(this);

            var bookingID = $button.data('id');

            var data = {
                bookingID: bookingID
            };

            Swal.fire({
                icon: 'warning',
                title: 'Opravdu chcete stornovat rezervaci?',
                //html: 'Označit výsledek testu',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Stornovat',
                cancelButtonText: 'Zrušit',
                reverseButtons: false
            }).then((result) => {
                if (result.isConfirmed) {
                    cancelResult(data);
                }
                //} else if (
                //    /* Read more about handling dismissals below */
                //    result.dismiss === Swal.DismissReason.cancel
                //) {
                //    swalWithBootstrapButtons.fire(
                //        'Cancelled',
                //        'Your imaginary file is safe :)',
                //        'error'
                //    )
                //}
            });
        });

        // ------------------------------
        //
        // ------------------------------
        function submitArrival(data) {
            var target = $('#fr-slots-table');

            var xhrId = $(target).data('xhr-id');
            var result;

            if (typeof (xhrId) === 'undefined') {
                xhrId = xhrArray1.length;

                xhrArray1[xhrId] = new XMLHttpRequest();
                $(target).data('xhr-id', xhrId);
            }

            xhrArray1[xhrId].abort();

            xhrArray1[xhrId] = $.ajax({
                cache: false,
                type: "POST",
                url: '@Url.Action("_SubmitTestArrival")',
                data: data,
                success: function (data) {

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.statusText === 'abort') {
                        return;
                    }

                    alert('chyba: ' + xhr);
                    console.log(xhr.responseText);
                },
                complete: function (data) {
                    reloadTable(table1);
                    reloadTable(table2);
                    reloadTable(table3);
                }
            });
        };

        // ------------------------------
        //
        // ------------------------------
        function submitResult(data) {
            var target = $('#fr-waiting-table');

            var xhrId = $(target).data('xhr-id');
            var result;

            if (typeof (xhrId) === 'undefined') {
                xhrId = xhrArray1.length;

                xhrArray1[xhrId] = new XMLHttpRequest();
                $(target).data('xhr-id', xhrId);
            }

            xhrArray1[xhrId].abort();

            xhrArray1[xhrId] = $.ajax({
                cache: false,
                type: "POST",
                url: '@Url.Action("_SubmitTestResult")',
                data: data,
                success: function (data) {

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.statusText === 'abort') {
                        return;
                    }

                    alert('chyba: ' + xhr);
                    console.log(xhr.responseText);
                },
                complete: function (data) {
                    reloadTable(table1);
                    reloadTable(table2);
                    reloadTable(table3);
                }
            });
        };

        // ------------------------------
        //
        // ------------------------------
        function cancelResult(data) {
            var target = $('#fr-waiting-table');

            var xhrId = $(target).data('xhr-id');
            var result;

            if (typeof (xhrId) === 'undefined') {
                xhrId = xhrArray1.length;

                xhrArray1[xhrId] = new XMLHttpRequest();
                $(target).data('xhr-id', xhrId);
            }

            xhrArray1[xhrId].abort();

            xhrArray1[xhrId] = $.ajax({
                cache: false,
                type: "POST",
                url: '@Url.Action("_SubmitTestCancel")',
                data: data,
                success: function (data) {

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.statusText === 'abort') {
                        return;
                    }

                    alert('chyba: ' + xhr);
                    console.log(xhr.responseText);
                },
                complete: function (data) {
                    reloadTable(table1);
                    reloadTable(table2);
                    reloadTable(table3);
                }
            });
        };

        function tickRemaining() {
            var now = new moment();

            $('.fr-remaining-time').each(function (index, item) {
                var $item = $(item);
                var content = '';
                var targetTime = $item.data('target-time');
                var targetTimeM = new moment(targetTime);

                var remaining = moment.duration(targetTimeM.diff(now));

                if (remaining.asMinutes() < 0) {
                    $item.toggleClass('text-warning',!$item.hasClass('text-warning'));
                    content = '<i class="fa fa-exclamation-triangle"></i> 00:00:00';
                }
                else {
                    content = moment.utc(remaining.as('milliseconds')).format('HH:mm:ss');
                }

                $item.html(content);
            });

            setTimeout(tickRemaining, 1000);
        }

        setTimeout(tickRemaining, 1000);

        @*$('#fr-datetimepicker').datetimepicker({
            //minDate: '@DateTime.Today.ToString("yyyy-MM-dd")',
            format: 'YYYY-MM-DD',
            locale: 'cs',
            inline: true,
            //sideBySide: true
        });*@

        //// on datepicker update
        //$('#fr-datetimepicker').on('update.datetimepicker', function (event) {
        //    // mark active dates
        //    markActiveDates();
        //});

        //$('#fr-datetimepicker').on('change.datetimepicker', function (date, oldDate) {
        //    // mark active dates
        //    markActiveDates();

        //    renderSlotsForDate(date.date);
        //});

        //$(document).on('click', '.fr-generate-slots-button', function (event) {
        //    $('#modal-lg').modal('show');

        //    var date = $(this).data('date');

        //    $('#GenerateSlots_Date').val(date);
        //});

        //$(document).on('change', 'input[name="GenerationMethod"]', function (event) {
        //    var $selectedItem = $('input[name="GenerationMethod"]:checked');

        //    var value = $selectedItem.val();
        //    var unlocks = $selectedItem.data('unlocks');

        //    $('.locked-by-method').val('');
        //    $('.locked-by-method').prop('disabled', true);
        //    $('#' + unlocks).prop('disabled', false);
        //});

        $('.fr-submit-slots').on('click', function (event) {
            var $form = $('#fr-generate-slots-form');
            var data = $form.serialize();

            if (!$form.valid()) {
                return;
            }

            var target = $(this);

            var originalContent = $(target).html();
            $(target).html('<i class="fa fa-spinner fa-spin"></i> Odesílám');

            var xhrId = $(target).data('xhr-id');
            var result;

            if (typeof (xhrId) === 'undefined') {
                xhrId = xhrArray1.length;

                xhrArray1[xhrId] = new XMLHttpRequest();
                $(target).data('xhr-id', xhrId);
            }

            xhrArray1[xhrId].abort();

            xhrArray1[xhrId] = $.ajax({
                cache: false,
                type: "POST",
                url: $form.attr('action'),
                data: data,
                success: function (data) {
                    // reset the form and hide modal
                    $form.trigger('reset');
                    $('#modal-lg').modal('hide');

                    // fetch and mark dates with slots again
                    fetchDates();

                    // trigger datetimepicker chage to load table with slots
                    $('#fr-datetimepicker').data("datetimepicker").date(new moment(data.date));

                    setTimeout(function () {

                        //$('#fr-datetimepicker').triggerHandler('change.datetimepicker');

                        renderSlotsForDate(data.date);
                    }, 500);
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.statusText === 'abort') {
                        return;
                    }

                    alert('chyba: ' + xhr);
                    console.log(xhr.responseText);
                },
                complete: function (data) {
                    $(target).html(originalContent);
                }
            });
        });

        @*function renderSlotsForDate(date) {
            // request data
            var url = '@Url.Action("_BookingsPartial", "Admin", null)';
            var target = $('#fr-bookings');

            var resultDate;
            if (typeof (date) === 'undefined' || date == null) {
                resultDate = new moment();
            }
            else {
                resultDate = new moment(date);
            }

            var data = {
                date: resultDate.format()
            };

            // render
            renderHtmlBlock(target, url, data);
        }*@

        //// render html block from url with data
        //function renderHtmlBlock(target, url, postData) {
        //    $(target).html('<div class="loading-block"></div>');
        //    console.log('rendering...');

        //    var xhrId = $(target).data('xhr-id');

        //    if (typeof (xhrId) === 'undefined') {
        //        xhrId = xhrArray1.length;

        //        xhrArray1[xhrId] = new XMLHttpRequest();
        //        $(target).data('xhr-id', xhrId);
        //    }

        //    xhrArray1[xhrId].abort();

        //    console.log('loading html block from URL: ' + url);
        //    console.log('with data:');
        //    console.log(postData);

        //    xhrArray1[xhrId] = $.ajax({
        //        cache: false,
        //        type: "POST",
        //        url: url,
        //        data: postData,
        //        success: function (data) {
        //            $(target).html(data);
        //        },
        //        error: function (xhr, ajaxOptions, thrownError) {
        //            if (xhr.statusText === 'abort') {
        //                return;
        //            }

        //            alert('chyba: ' + xhr);
        //            console.log(xhr.responseText);
        //        }
        //    });
        //};

        @*// fetch dates with slots
        function fetchDates() {
            var target = $('#fr-datetimepicker');

            var xhrId = $(target).data('xhr-id');
            var result;

            if (typeof (xhrId) === 'undefined') {
                xhrId = xhrArray1.length;

                xhrArray1[xhrId] = new XMLHttpRequest();
                $(target).data('xhr-id', xhrId);
            }

            xhrArray1[xhrId].abort();

            xhrArray1[xhrId] = $.ajax({
                cache: false,
                type: "POST",
                url: '@Url.Action("Bookings")',
                //data: postData,
                success: function (data) {
                    // set result to activeDates variable
                    activeDates = data.calc_StringDatesWithSlots;
                    freeDates = data.calc_StringDatesWithFreeSlots;

                    // and mark active dates
                    markActiveDates();
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    if (xhr.statusText === 'abort') {
                        return;
                    }

                    alert('chyba: ' + xhr);
                    console.log(xhr.responseText);
                }
            });
        };*@

        //// funtion for marking active dates based on activeDates variable
        //function markActiveDates() {
        //    // remove all marks
        //    $('td.day').removeClass('marked');
        //    $('td.day').removeClass('marked-free');

        //    // loop through dates and mark them
        //    for (var i = 0; i < activeDates.length; i++) {
        //        $('td.day[data-date="' + activeDates[i] + '"]').addClass('marked');
        //    }

        //    // loop through free dates and mark them
        //    for (var i = 0; i < freeDates.length; i++) {
        //        $('td.day[data-date="' + freeDates[i] + '"]')
        //            .removeClass('marked')
        //            .addClass('marked-free');
        //    }
        //};

        //// when page loaded...
        //$(document).ready(function () {
        //    // fetch dates
        //    fetchDates();

        //    // and trigger datetimepicker change to load table with slots
        //  Url $('#fr-datetimepicker').triggerHandler('change.datetimepicker');
        //});
    </script>
}