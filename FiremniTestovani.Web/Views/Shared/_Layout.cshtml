@{ 
    // get source from URL
    FiremniTestovani.Models.ApplicationSource source = (FiremniTestovani.Models.ApplicationSource)Context.Items["source"];
}
<!DOCTYPE html>
<html lang="cs">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="x-ua-compatible" content="ie=edge">

    <title>@ViewData["Title"] - @Localizer["AppName"]</title>

    <!-- Font Awesome Icons -->
    <link rel="stylesheet" href="~/lib/fontawesome-free/css/all.min.css">
    <!-- Theme style -->
    <link rel="stylesheet" href="~/css/adminlte.min.css">
    <!-- Google Font: Source Sans Pro -->
    <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700" rel="stylesheet">
    <!-- Sweet alerts -->
    <link rel="stylesheet" href="~/lib/sweetalert2/sweetalert2.min.css" />
    <!-- Custom css -->
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true">

    @RenderSection("Header", required: false)
</head>
<body class="hold-transition layout-top-nav">
    <div class="wrapper">

        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand-md navbar-light navbar-white">
            <div class="container">
                <a asp-action="Index" asp-controller="Home" class="navbar-brand">
                    <img src="~/clients/@source.GetClientConfigDir()/img/logo.png" alt="@Localizer["CompanyLogo"]" class="brand-image" style="opacity: .8">
                    <span class="brand-text font-weight-light">@Localizer["AppName"]</span>
                </a>

                <button class="navbar-toggler order-1" type="button" data-toggle="collapse" data-target="#navbarCollapse" aria-controls="navbarCollapse" aria-expanded="false" aria-label="@Localizer["ToggleNavigation"]">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse order-3" id="navbarCollapse">
                    <!-- Left navbar links -->
                    <ul class="navbar-nav">

                    </ul>

                    @await Html.PartialAsync("_SelectLanguagePartial")
                </div>

                <!-- Right navbar links -->
                <ul class="order-1 order-md-3 navbar-nav navbar-no-expand ml-auto">
                    <li class="nav-item">
                        <a class="nav-link" asp-action="Index" asp-controller="Admin">
                            <i class="fas fa-cogs"></i>
                        </a>
                    </li>
                </ul>
            </div>
        </nav>
        <!-- /.navbar -->

        @RenderBody()

        <partial name="_Footer" />

    </div>
    <!-- ./wrapper -->
    <!-- REQUIRED SCRIPTS -->
    <!-- jQuery -->
    <script src="~/lib/jquery/jquery.min.js"></script>
    <partial name="_ValidationScriptsPartial" />
    <!-- Bootstrap 4 -->
    <script src="~/lib/bootstrap/js/bootstrap.bundle.min.js"></script>
    <!-- AdminLTE App -->
    <script src="~/js/adminlte.min.js"></script>
    <!-- SweetAlert -->
    <script src="~/lib/sweetalert2/sweetalert2.min.js"></script>

    <script>
        // Sweet Alert
        function frSweetAlert(icon, title, text, callback) {
            let timerInterval
            Swal.fire({
                icon: icon,
                title: title,
                html: text,
                timer: 2000,
                timerProgressBar: true,
                didOpen: () => {
                    Swal.showLoading()
                    timerInterval = setInterval(() => {
                        const content = Swal.getContent()
                        if (content) {
                            const b = content.querySelector('b')
                            if (b) {
                                b.textContent = Swal.getTimerLeft()
                            }
                        }
                    }, 100)
                },
                willClose: () => {
                    clearInterval(timerInterval)
                }
            }).then((result) => {
                if (typeof (callback) === 'function') {
                    callback();
                }
                ///* Read more about handling dismissals below */
                //if (result.dismiss === Swal.DismissReason.timer) {
                //    console.log('I was closed by the timer')
                //}
            })
        }
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>